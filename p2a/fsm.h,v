head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2017.10.08.12.37.55;	author Administrator;	state Exp;
branches;
next	1.6;

1.6
date	2017.10.07.10.58.40;	author Administrator;	state Exp;
branches;
next	1.5;

1.5
date	2017.10.02.16.26.34;	author Administrator;	state Exp;
branches;
next	1.4;

1.4
date	2017.10.01.16.33.26;	author Administrator;	state Exp;
branches;
next	1.3;

1.3
date	2017.09.30.15.16.48;	author Administrator;	state Exp;
branches;
next	1.2;

1.2
date	2017.09.27.15.53.17;	author Administrator;	state Exp;
branches;
next	1.1;

1.1
date	2017.09.25.16.26.26;	author Administrator;	state Exp;
branches;
next	;


desc
@@


1.7
log
@UPDATE: use macro and uniform entry fsm.c to include different engine
@
text
@#ifndef __PARSE_FSM__
#define __PARSE_FSM__

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

//#define WITH_LUA 1
#define WITH_MUJS 1


/// \param[in] sfn script filename
/// \return 0-OK 1-Fail
int p2a_initScript(char* sfn);

void p2a_finiScript();

/// \param[in] act 0-get 1-set
/// \param[in] name effective in 1-set mode
/// \return varible name in global namespace
char* p2a_accessRootVar(int act, char* name);

/// \param[in] phase explain below
///       1 - method       2 - comment
///       3 - varible type 4 - varible name
///       5 - varible dimen 6 - struct define
/// \param[in] str found content
int p2a_push(int phase, char* str);

/// no input string, just trigger state
/// \param[in] state explain below
///       1 - one var        2 - one array
///       4 - method appear  5 - result appear
///       541 - state plus1  531 - state minus1
///       9 - final
void p2a_reach(int state);

#endif
@


1.6
log
@UPDATE: imporve struct output
@
text
@d8 7
a14 5
//#define WITH_LUA
#ifdef WITH_LUA
#include "lua51/lauxlib.h"
#include "lua51/lualib.h"
#endif
d16 1
a16 1
#include "mujs.h"
@


1.5
log
@INSERT: support char[N] as string
@
text
@d24 1
a24 1
///       5 - varible dimen
d32 1
@


1.4
log
@UPDATE: add in/out param, can produce rough output
@
text
@d24 1
a24 1
///
d30 2
a31 2
///       1 - one var        2 - method appear
///       3 - result appear
@


1.3
log
@UPDATE: control lua with macro, use function instead of hardcord script name, extend js parse
@
text
@d26 1
a26 1
int p2a_findElem(int phase, char* str);
d30 4
a33 2
///       1 - one var
void p2a_reachState(int state);
@


1.2
log
@UPDATE: pass flex token to script, bison parse to trigger script, drop script fini
@
text
@d3 7
d12 2
d16 5
@


1.1
log
@UPDATE: add lua/js script interactive
@
text
@d7 11
a17 1
int p2a_findBlock(char* method);
@

