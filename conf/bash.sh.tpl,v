head	1.52;
access;
symbols;
locks; strict;
comment	@# @;


1.52
date	2022.05.21.14.32.45;	author android;	state Exp;
branches;
next	1.51;
commitid	1006288F80D498D2879;

1.51
date	2022.05.03.09.12.55;	author android;	state Exp;
branches;
next	1.50;
commitid	1006270F2172D829239;

1.50
date	2022.04.23.11.02.06;	author android;	state Exp;
branches;
next	1.49;
commitid	1006263DCAE52049AF4;

1.49
date	2022.04.23.10.26.40;	author android;	state Exp;
branches;
next	1.48;
commitid	1006263D460495E007D;

1.48
date	2022.02.25.00.01.12;	author android;	state Exp;
branches;
next	1.47;
commitid	10062181C485839AE64;

1.47
date	2022.01.29.06.25.17;	author android;	state Exp;
branches;
next	1.46;
commitid	10061F4DDCD4F7B58A4;

1.46
date	2022.01.28.07.25.01;	author android;	state Exp;
branches;
next	1.45;
commitid	10061F39A4D34ACF204;

1.45
date	2022.01.21.15.21.47;	author android;	state Exp;
branches;
next	1.44;
commitid	10061EACF8B66DD3082;

1.44
date	2022.01.09.08.14.50;	author android;	state Exp;
branches;
next	1.43;
commitid	10061DA997A4AA8C78C;

1.43
date	2022.01.09.06.48.37;	author android;	state Exp;
branches;
next	1.42;
commitid	10061DA8545479F0063;

1.42
date	2021.09.30.14.52.49;	author android;	state Exp;
branches;
next	1.41;
commitid	g96UtYY45V7uqZaD;

1.41
date	2021.09.25.14.49.59;	author android;	state Exp;
branches;
next	1.40;
commitid	5IEY7k4yrJMtzlaD;

1.40
date	2021.09.07.05.37.34;	author android;	state Exp;
branches;
next	1.39;
commitid	ENokA9kDImeQ5Z7D;

1.39
date	2021.09.07.01.14.50;	author android;	state Exp;
branches;
next	1.38;
commitid	Rg4vebHKHCXHDX7D;

1.38
date	2021.08.23.10.20.49;	author android;	state Exp;
branches;
next	1.37;
commitid	4puTl5cODNYT856D;

1.37
date	2021.08.01.03.50.59;	author android;	state Exp;
branches;
next	1.36;
commitid	5hT2O9NcqlQ0Hd3D;

1.36
date	2021.06.28.15.05.40;	author android;	state Exp;
branches;
next	1.35;
commitid	Qcyhdtb7K6mewUYC;

1.35
date	2021.06.13.09.55.26;	author android;	state Exp;
branches;
next	1.34;
commitid	CZTnUGRCL38HhXWC;

1.34
date	2021.06.12.04.29.50;	author android;	state Exp;
branches;
next	1.33;
commitid	WiyOpZobTUeZvNWC;

1.33
date	2021.06.10.16.31.11;	author android;	state Exp;
branches;
next	1.32;
commitid	78Lv7equ3FirzBWC;

1.32
date	2021.06.10.16.15.11;	author android;	state Exp;
branches;
next	1.31;
commitid	3jzt4dlJNUZWtBWC;

1.31
date	2021.06.06.16.55.11;	author android;	state Exp;
branches;
next	1.30;
commitid	8lOFhdGPAa0EP5WC;

1.30
date	2021.06.06.16.33.47;	author android;	state Exp;
branches;
next	1.29;
commitid	sEWfqwsp9jBiI5WC;

1.29
date	2021.06.06.16.05.20;	author android;	state Exp;
branches;
next	1.28;
commitid	vuJF5Nl4Duwxy5WC;

1.28
date	2021.05.30.15.12.19;	author android;	state Exp;
branches;
next	1.27;
commitid	ZCUGZjZ3FH0jubVC;

1.27
date	2021.05.01.03.10.36;	author android;	state Exp;
branches;
next	1.26;
commitid	qtF4tiRMp6rvqoRC;

1.26
date	2021.04.30.00.39.18;	author android;	state Exp;
branches;
next	1.25;
commitid	L6LmhbPQTrMACfRC;

1.25
date	2021.04.29.00.29.35;	author android;	state Exp;
branches;
next	1.24;
commitid	0DjWve1CQUPfB7RC;

1.24
date	2021.04.25.05.26.08;	author android;	state Exp;
branches;
next	1.23;
commitid	ZTt7wcasUDnXmDQC;

1.23
date	2021.04.11.15.20.38;	author android;	state Exp;
branches;
next	1.22;
commitid	sDhTnMA5CX2O6TOC;

1.22
date	2021.04.11.07.15.36;	author android;	state Exp;
branches;
next	1.21;
commitid	Id1BSo9PscBpqQOC;

1.21
date	2021.01.24.14.24.10;	author android;	state Exp;
branches;
next	1.20;
commitid	100600D830A1878522D;

1.20
date	2021.01.17.17.14.43;	author android;	state Exp;
branches;
next	1.19;
commitid	100600470831B9C3CBF;

1.19
date	2020.12.31.15.41.52;	author android;	state Exp;
branches;
next	1.18;
commitid	1005FEDF1400F32F5A7;

1.18
date	2020.12.28.13.02.06;	author android;	state Exp;
branches;
next	1.17;
commitid	1005FE9D74E124E0B3E;

1.17
date	2020.12.22.05.05.50;	author android;	state Exp;
branches;
next	1.16;
commitid	1005FE17EAD3890CA62;

1.16
date	2020.10.09.16.01.26;	author alarm;	state Exp;
branches;
next	1.15;

1.15
date	2020.10.08.07.51.11;	author alarm;	state Exp;
branches;
next	1.14;

1.14
date	2020.10.06.07.50.33;	author alarm;	state Exp;
branches;
next	1.13;

1.13
date	2020.10.06.07.22.17;	author alarm;	state Exp;
branches;
next	1.12;

1.12
date	2020.10.05.16.18.59;	author alarm;	state Exp;
branches;
next	1.11;

1.11
date	2020.10.01.14.57.35;	author alarm;	state Exp;
branches;
next	1.10;

1.10
date	2020.10.01.08.22.47;	author alarm;	state Exp;
branches;
next	1.9;

1.9
date	2020.10.01.07.49.29;	author alarm;	state Exp;
branches;
next	1.8;

1.8
date	2020.10.01.07.26.14;	author FOTEN;	state Exp;
branches;
next	1.7;

1.7
date	2020.05.30.14.25.46;	author android;	state Exp;
branches;
next	1.6;
commitid	17095ed26cea0000;

1.6
date	2020.05.30.05.44.27;	author android;	state Exp;
branches;
next	1.5;
commitid	cf25ed1f2bb0000;

1.5
date	2020.05.24.15.24.32;	author android;	state Exp;
branches;
next	1.4;
commitid	14e35eca91b00000;

1.4
date	2020.05.24.14.25.09;	author android;	state Exp;
branches;
next	1.3;
commitid	12e95eca83c50000;

1.3
date	2020.05.22.16.49.26;	author android;	state Exp;
branches;
next	1.2;
commitid	66355ec802960000;

1.2
date	2020.05.22.16.07.10;	author android;	state Exp;
branches;
next	1.1;
commitid	64fb5ec7f8ae0000;

1.1
date	2020.05.22.15.36.09;	author android;	state Exp;
branches;
next	;
commitid	627f5ec7f1690000;


desc
@@


1.52
log
@let conftool download configable
@
text
@# avoid init interative
case "$-" in
    *i*) ;;
    *) return
esac

# add . and ~/.FAVORITE_DIRNAME/bin into PATH if not exists
case :$PATH: in
    *:.:*) ;;
    *) export PATH=".:$PATH" ;;
esac
case :$PATH: in
    *:~/.FAVORITE_DIRNAME/bin:*) ;;
    *) export PATH="~/.FAVORITE_DIRNAME/bin:$PATH"
esac

if [ -x "$(command -v lua)" ]; then
  eval "$(lua ~/.FAVORITE_DIRNAME/bin/z.lua  --init bash)"
  unalias z
  z(){
    if [ -f "$1" ]; then
      cat $@@
    else
      _zlua $@@
    fi
  }
else
  z(){
    if [ -f "$1" ]; then
      cat $@@
    else
      cd $1
    fi
  }
fi

#ABSPWD=$(cd $(dirname $0);pwd)
#. ~/.FAVORITE_DIRNAME/bin/_bashfunc.sh

alias ls="ls --color"
alias ll="ls -lAh"
alias la="ls -A"
alias rmf="rm -rf"
if [ -x "$(command -v strace)" ]; then
  alias strace="strace -s 128"
fi
if [ -x "$(command -v pstree)" ]; then
  alias pstree="pstree -p"
fi

bind '"\C-t": backward-word'
# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Allow <C-s> to pass through to shell and programs
stty -ixon -ixoff

# try to find a pretty hostname not localhost
CONFHOSTNAME=`hostname`
if [ $CONFHOSTNAME = localhost ]; then
  if [ -f /etc/hostname ]; then
    CONFHOSTNAME=`cat /etc/hostname`
  else
    CONFHOSTNAME=$HOSTNAME
  fi
fi
# get first ip's 4th number
if [ -x "$(command -v ip)" ]; then
  CONFIP4=`ip a|grep 'inet '|grep -v 127.0.0.1|head -1|awk -e '{print $2}'|cut -d. -f 4 |sed -e 's=/.*=='`_
elif [ -x "$(command -v ifconfig)" ]; then
  CONFIP4=`ifconfig|grep 'inet '|grep -v 127.0.0.1|head -1|awk -e '{print $2}'|cut -d. -f 4`_
fi
set_ps1(){
  # The various escape codes that we can use to color our prompt.
  local        WINE="\[\033[0;31m\]"
  local         RED="\[\033[1;31m\]"
  local       GREEN="\[\033[0;32m\]"
  local        CYAN="\[\033[1;32m\]"
  local      YELLOW="\[\033[1;33m\]"
  local        BLUE="\[\033[1;34m\]"
  local      PURPLE="\[\033[1;35m\]"
  local       WHITE="\[\033[1;37m\]"
  local        GRAY="\[\033[0;37m\]"
  local          NC="\[\e[0m\]"
  # if in git repo, add hint in PS1
  local       GITST=""
  git branch > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    GITST="(`git branch | grep '^\*' | cut -d' ' -f2`"
    # git status not clean, append `!' after branch name
    local iscln="$(git status 2>/dev/null)"
    if [[ "$iscln" =~ 'nothing to commit' ]]; then
      local remote_pattern="branch is (ahead|behind)"
      if [[ "$iscln" =~ $remote_pattern ]]; then
        GITST=${GITST}"~)"
      else
        GITST=${GITST}")"
      fi
    else
      GITST=${GITST}"!)"
    fi
  fi
  # show VENV when activate pyvenv
  local CFVENV=
  if [ function = "$(type -t deactivate)" ]; then
    CFVENV=VENV
  fi
  PS1="${CFVENV}${CYAN}\u@@${RED}${CONFIP4}${CONFHOSTNAME}${YELLOW}1$1${BLUE}\W${PURPLE}${GITST}${NC}\$ "
  if [ -x "$(command -v lua)" ]; then
    _zlua --add "$(command pwd 2>/dev/null)"
  fi
}
PROMPT_COMMAND="set_ps1 \$?"

if ! [ -x "$(command -v rg)" ]; then
  rg(){
    local opt="-nR"
    while true; do
      case "$1" in
        -i|-w)
        opt=$opt" "$1
        shift ;;
        -t)
        opt=$opt" --include=\\*.$2"
        shift 2;;
        *) break;;
      esac
    done
    local cmd="grep --color=auto $opt '$*' ."
    eval $cmd
  }
fi

# "ff diff % %" will change to "ff diff $(fzf) $(fzf)"
if [ -x "$(command -v fzf)" ]; then
export FZF_DEFAULT_OPTS="--layout=reverse --height 50%"
ff() {
  declare -i num=$#
  if [ $num -le 1 ]; then
      echo must have least 2 param
      return
  fi
  cmd=""
  for ((i=0; i<$num; i++))
  do
    if [ "$1" = "%" ]; then
      cmd=$cmd" ""\$(fzf)"
    else
      cmd=$cmd" ""$1"
    fi
    shift
  done
  eval $cmd
}
else
# toy fake fzf
fzf() {
    read -p "Input path divide with 1 space: " name
    real=${name// /.*}
    find | grep -i --color "$real"
}
fi

# use `p [num]' instead of "cd .." easy
p() {
    if [ $# -eq 0 ]; then
        eval cd ..
    elif [ $1 = 'h' ]; then
        cat <<EOF
p d   # choose dir quickly
p rpc # ssh cmd over host in h.txt
EOF
    elif [ $1 = 'd' ]; then
        dirlst=`find -maxdepth 1 -type d ! -path '.'`
        arrdir=($dirlst)
        dircnt=${#arrdir[@@]}
        if [ $dircnt -eq 1 ]; then  # only one dir
            cd $dirlst
        elif [ $dircnt -gt 1 ]; then
            echo $dirlst | tr ' ' '\n' | nl
            read -p "Which dir to enter? " idx
            todir=`echo $dirlst| tr ' ' '\n'|sed -n "${idx}p"`
            cd $todir
        fi
    elif [ $1 = 'rpc' ]; then
        shift
        for h in `cat h.txt`
        do
            echo HOST: $h
            ssh $h $*
        done
    elif [ $1 -gt 0 ]; then
        for ((i=0; i<$1; i++))
        do
            eval cd ..
        done
    fi
}

# use `h fuzzyword' to call recent history command
h() {
  if [ $# -lt 1 ]; then
      return 1
  fi
  expandkwd=`echo $1|sed -e 's/\(.\)/\1.*/g'`
  cmd=`history|grep -i "$expandkwd"|awk '$2 !~ /^h$/{$1="";print}'|sort|uniq|nl`
  if [ -z "$cmd" ]; then
      return 1
  fi
  num=`echo "$cmd" | wc -l`
  if [ $num -gt 1 ]; then
      echo "$cmd"
      read -p "which action prefer[Enter=>last]: " lineno
      if [ -z "$lineno" ]; then
          lineno=$num
      fi
      cmd=`echo "$cmd"|grep "^ *$lineno\t"`
  fi
  eval `echo "$cmd"|awk '{$1="";print}'`
}

inspectpid() {
  if [ "$1" -gt 0 ] 2>/dev/null; then
    echo cmdline: `cat -A /proc/$1/cmdline`
    ll /proc/$1/cwd
    ll /proc/$1/exe
    cat /proc/$1/status | sed -n '/\(^Vm\|^Threads\)/p'
    cat /proc/$1/stat | awk '{print("UserTick:", $14, "SysTick:", $15, "Tick usually 0.01s")}'
    head -1 /proc/$1/net/sockstat
    cpuuse=`ps p $1 -o %cpu= 2>/dev/null`
    if [ $? -eq 0 ];then
        echo "CPU usage: $cpuuse"
    else
        echo "CPU usage: Not support"
    fi
  else
    ps aux | grep $1
  fi
}

# show favorite params default, arg1 is number show detail, if t show tree, otherwise search
psp() {
  if [ $# -eq 0 ]; then
    ps -eo pid,ppid,pcpu,pmem,stat,wchan:20,etimes,cmd;
  else
    local findpat='['${1:0:1}']'${1:1}
    if [ "$1" -ge 0 ] 2>/dev/null ; then
      echo -e "PID\tTID\tPPID\t%CPU\tVSZ\tRSS\tNLWP\tSTAT\tWCHAN\tELAPSED\tCMD";
      ps -Leo pid,tid,ppid,pcpu,vsz,rss,nlwp,stat,wchan:20,etimes,cmd | grep -E "$findpat";
    else
      if [ "$1" = t ]; then
        ps -ejHly;
      else
        echo -e "PID\tPPID\t%CPU\tVSZ\tRSS\tNLWP\tSTAT\tWCHAN\tELAPSED\tCMD";
        ps -eo pid,ppid,pcpu,vsz,rss,nlwp,stat,wchan:20,etimes,cmd | grep -Ei "$findpat"|awk '{OFS="\t";CONVFMT="%.2f";$4=$4/1024;$5=$5/1024;if($9>86400){$9=$9/86400 "D"}else if($9>3600){$9=$9/3600 "H"}print}';
      fi;
    fi;
  fi
}

@


1.51
log
@PS1 show VENV when activate
@
text
@d105 1
a105 1
  if [ -n "$(command -v deactivate)" ]; then
@


1.50
log
@restore PS1 version back to 1
@
text
@d103 6
a108 1
  PS1="${CYAN}\u@@${RED}${CONFIP4}${CONFHOSTNAME}${YELLOW}1$1${BLUE}\W${PURPLE}${GITST}${NC}\$ "
@


1.49
log
@PS1 show ip
@
text
@d103 1
a103 1
  PS1="${CYAN}\u@@${RED}${CONFIP4}${CONFHOSTNAME}${YELLOW}7$1${BLUE}\W${PURPLE}${GITST}${NC}\$ "
@


1.48
log
@use many police to decide hostname
@
text
@d67 6
d103 1
a103 1
  PS1="${CYAN}\u@@${RED}${CONFHOSTNAME}${YELLOW}7$1${BLUE}\W${PURPLE}${GITST}${NC}\$ "
@


1.47
log
@psp not show grep
@
text
@d58 9
d97 1
a97 1
  PS1="${CYAN}\u@@${RED}$(hostname)${YELLOW}7$1${BLUE}\W${PURPLE}${GITST}${NC}\$ "
@


1.46
log
@psp direct search number
@
text
@d226 1
d229 1
a229 1
      ps -Leo pid,tid,ppid,pcpu,vsz,rss,nlwp,stat,wchan:20,etimes,cmd | grep "$1";
d235 1
a235 1
        ps -eo pid,ppid,pcpu,vsz,rss,nlwp,stat,wchan:20,etimes,cmd | grep -i "$*"|awk '{OFS="\t";CONVFMT="%.2f";$4=$4/1024;$5=$5/1024;if($9>86400){$9=$9/86400 "D"}else if($9>3600){$9=$9/3600 "H"}print}';
@


1.45
log
@add inspectpid tick unit
@
text
@d228 1
a228 1
      ps -Leo pid,tid,ppid,pcpu,vsz,rss,nlwp,stat,wchan:20,etimes,cmd | grep -i "^ $1";
@


1.44
log
@improve pkg -py and let ps1 to 7
@
text
@d208 1
a208 1
    cat /proc/$1/stat | awk '{print("UserTime:", $14, "SysTime:", $15)}'
@


1.43
log
@forget add pwd to zlua
@
text
@d88 1
a88 1
  PS1="${CYAN}\u@@${RED}$(hostname)${YELLOW}6$1${BLUE}\W${PURPLE}${GITST}${NC}\$ "
@


1.42
log
@drop color man
@
text
@d89 3
@


1.41
log
@add color man
@
text
@a236 22
# -------------------------------------------------------------------------------
# colored man
# -------------------------------------------------------------------------------
# * http://unix.stackexchange.com/questions/6010/colored-man-pages-not-working-on-gentoo
# * https://forums.gentoo.org/viewtopic-t-819833-start-0.html
export GROFF_NO_SGR=1
# Overwrite man with different color
man() {
›   env \
›   ›   LESS_TERMCAP_mb=$(printf "\e[1;34m") \
›   ›   LESS_TERMCAP_md=$(printf "\e[1;34m") \
›   ›   LESS_TERMCAP_me=$(printf "\e[0m") \
›   ›   LESS_TERMCAP_se=$(printf "\e[0m") \
›   ›   LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
›   ›   LESS_TERMCAP_ue=$(printf "\e[0m") \
›   ›   LESS_TERMCAP_us=$(printf "\e[1;32m") \
›   ›   PAGER="${commands[less]:-$PAGER}" \
›   ›   _NROFF_U=1 \
›   ›   PATH="$HOME/bin:$PATH" \
›   ›   ›   man "$@@"
}

@


1.40
log
@fix rg -t bug, use <leader>rt to call terminal in vim
@
text
@d7 51
d88 1
a88 1
  PS1="${CYAN}\u@@${RED}$(hostname)${YELLOW}5$1${BLUE}\W${PURPLE}${GITST}${NC}\$ "
a91 10
alias ls="ls --color"
alias ll="ls -lAh"
alias la="ls -A"
alias rmf="rm -rf"
if [ -x "$(command -v strace)" ]; then
  alias strace="strace -s 128"
fi
if [ -x "$(command -v pstree)" ]; then
  alias pstree="pstree -p"
fi
a110 37
bind '"\C-t": backward-word'

# add . and ~/.FAVORITE_DIRNAME/bin into PATH if not exists
case :$PATH: in
    *:.:*) ;;
    *) export PATH=".:$PATH" ;;
esac
case :$PATH: in
    *:~/.FAVORITE_DIRNAME/bin:*) ;;
    *) export PATH="~/.FAVORITE_DIRNAME/bin:$PATH"
esac
# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Allow <C-s> to pass through to shell and programs
stty -ixon -ixoff

if [ -x "$(command -v lua)" ]; then
  eval "$(lua ~/.FAVORITE_DIRNAME/bin/z.lua  --init bash)"
  unalias z
  z(){
    if [ -f "$1" ]; then
      cat $@@
    else
      _zlua $@@
    fi
  }
else
  z(){
    if [ -f "$1" ]; then
      cat $@@
    else
      cd $1
    fi
  }
fi

d237 22
@


1.39
log
@support -t in fake rg and change vim terminal normal mode keymap
@
text
@d60 1
a60 1
        opt=$opt" --include=='*.$2'"
d65 2
a66 1
    grep $opt "$*" *
@


1.38
log
@fix git br and add more hint in snip sh
@
text
@d53 11
a63 7
    opt="-nR"
    for i in $@@;
    do
      if [ $i = "-i" -o $i = "-w" ]; then
        opt=$opt" "$i
        shift
      fi
@


1.37
log
@use <leader>ff/fb roll in vim
@
text
@d23 1
a23 1
    GITST="(`git br | grep '^\*' | cut -d' ' -f2`"
@


1.36
log
@supperss warning when execute git status in .git
@
text
@d37 1
a37 1
  PS1="${CYAN}\u@@${RED}$(hostname)${YELLOW}4$1${BLUE}\W${PURPLE}${GITST}${NC}\$ "
@


1.35
log
@p h show help
@
text
@d25 1
a25 1
    local iscln="$(git status)"
@


1.34
log
@show ~ when branch is ahead or behind
@
text
@d132 1
a132 1
# use `p [num]' instead of "cd .." easy, use `p d` choose dir quickly
d136 5
@


1.33
log
@loose PS1 git status check
@
text
@d25 9
a33 1
    if [ -z "`git status|grep 'nothing to commit'`" ]; then
a34 2
    else
      GITST=${GITST}")"
@


1.32
log
@rpc miss shift
@
text
@d25 1
a25 1
    if [ -z "`git status|head -2|tail -1|grep '^nothing'`" ]; then
@


1.31
log
@show git status in PS1
@
text
@d143 1
@


1.30
log
@modify z.lua incoprate with PS1
@
text
@d23 7
a29 1
    GITST="(`git br | grep '^\*' | cut -d' ' -f2`)"
@


1.29
log
@show git branch in PS1 when in git repo
@
text
@d25 1
a25 1
  PS1="${CYAN}\u@@${RED}$(hostname)${YELLOW}4${BLUE}\W${PURPLE}${GITST}${NC}\$ "
d27 1
a27 1
PROMPT_COMMAND=set_ps1
@


1.28
log
@add cat file into z
@
text
@d7 21
a27 1
PS1="\[\033[01;32m\]\u@@\[\033[01;31m\]$(hostname)\[\033[01;33m\]4$?\[\033[01;34m\]\W\[\033[00m\]\$ "
@


1.27
log
@support -i and -w in self make rg
@
text
@d51 17
a67 1
    eval "$(lua ~/.FAVORITE_DIRNAME/bin/z.lua  --init bash)"
@


1.26
log
@add self make rg
@
text
@d21 9
a29 1
    grep -nR "$*" *
@


1.25
log
@change vim search to rg
@
text
@d19 5
@


1.24
log
@add sub command rpc in p, do simple remote batch work
@
text
@d7 1
a7 1
PS1="\[\033[01;32m\]\u@@\[\033[01;31m\]$(hostname)\[\033[01;33m\]3$?\[\033[01;34m\]\W\[\033[00m\]\$ "
@


1.23
log
@use double quote instead single quote in PS1, reduce subshell call
@
text
@d87 6
@


1.22
log
@PS1 use u5s instead of \h
@
text
@d7 1
a7 1
PS1='\[\033[01;32m\]\u@@\[\033[01;31m\]$(hostname)\[\033[01;33m\]3$?\[\033[01;34m\]\W\[\033[00m\]\$ '
@


1.21
log
@fix psp show PID bug
@
text
@d7 1
a7 1
PS1='\[\033[01;32m\]\u@@\[\033[01;31m\]\h\[\033[01;33m\]3$?\[\033[01;34m\]\W\[\033[00m\]\$ '
@


1.20
log
@enhance psp display
@
text
@d139 1
a139 1
    ps -eo pid,ppid,pcpu,vsz,rss,stat,wchan:20,etimes,cmd;
d143 1
a143 1
      ps -Leo pid,tid,ppid,pcpu,vsz,rss,nlwp,stat,wchan:20,etimes,cmd | grep -i "$*";
@


1.19
log
@make bash.sh reentry
@
text
@d139 1
a139 1
    ps -eo pid,ppid,pcpu,pmem,nlwp,stat,wchan:20,cmd,etimes
d142 2
a143 4
      echo -e "PID\tTID\tPPID\t%CPU\t%MEM\tNLWP\tSTAT\tWCHAN\tCMD\tELAPSED"
      ps -Leo pid,tid,ppid,pcpu,pmem,nlwp,stat,wchan:20,cmd,etimes | grep -i "$*"
    elif [ "$1" = t ]; then
      ps -ejHly
d145 7
a151 3
      echo -e "PID\tPPID\t%CPU\t%MEM\tNLWP\tSTAT\tWCHAN\tCMD\tELAPSED"
      ps -eo pid,ppid,pcpu,pmem,nlwp,stat,wchan:20,cmd,etimes | grep -i "$*"
    fi
d154 1
@


1.18
log
@make p implement more elegance
@
text
@d1 1
a1 6
#Avoid multi init
if [ -z "$_INIT_SH_LOADED" ]; then
    _INIT_SH_LOADED=1
else
    return
fi
d13 6
a18 2
alias strace="strace -s 128"
alias pstree="pstree -p"
d22 1
a22 1
# add . into PATH if not exists
d25 5
a29 1
    *) PATH=".:$PATH" ;;
a30 1
export PATH="~/.FAVORITE_DIRNAME/bin:$PATH"
@


1.17
log
@p support d subcommand
@
text
@d75 9
a83 10
        if [ -n "$dirlst" ]; then
          dircnt=`echo $dirlst | tr ' ' '\n'|wc -l`
          if [[ $dircnt -eq 1 ]]; then  # only one dir
              cd $dirlst
          else
              echo $dirlst | tr ' ' '\n' | nl
              read -p "Which dir to enter? " idx
              todir=`echo $dirlst| tr ' ' '\n'|sed -n "${idx}p"`
              cd $todir
          fi
@


1.16
log
@UPDATE: show last errcode in PS1
@
text
@d12 1
a12 1
PS1='\[\033[01;32m\]\u@@\[\033[01;31m\]\h\[\033[01;33m\]2$?\[\033[01;34m\]\W\[\033[00m\]\$ '
d69 1
a69 1
# use `p [num]' instead of "cd .." easy
d73 14
a86 1
    else
@


1.15
log
@UPDATE: remove function keyword, because ash not support
@
text
@d12 1
a12 1
PS1='\[\033[01;32m\]\u@@\[\033[01;31m\]\h\[\033[01;33m\]2\[\033[01;34m\]\W\[\033[00m\]\$ '
d17 1
@


1.14
log
@UPDATE: psp use 1 param
@
text
@d41 1
a41 1
function ff() {
d61 1
a61 1
function fzf() {
d69 1
a69 1
function p() {
d81 1
a81 1
function h() {
d102 1
a102 1
function inspectpid() {
d122 1
a122 1
function psp() {
@


1.13
log
@INSERT: when pid add thread id
@
text
@d121 1
a121 1
# show favorite params default, 1 arg show tree, 2 arg above to search
a124 2
  elif [ $# -eq 1 ]; then
    ps -ejHly
a125 1
    shift
d129 2
@


1.12
log
@UPDATE: ps only show process,not thread
@
text
@d129 7
a135 2
    echo -e "PID\tPPID\t%CPU\t%MEM\tNLWP\tSTAT\tWCHAN\tCMD\tELAPSED"
    ps -eo pid,ppid,pcpu,pmem,nlwp,stat,wchan:20,cmd,etimes | grep -i "$*"
@


1.11
log
@INSERT: more alias
@
text
@d124 1
a124 1
    ps -Leo pid,ppid,pcpu,pmem,nlwp,stat,wchan:20,cmd,etimes
d130 1
a130 1
    ps -Leo pid,ppid,pcpu,pmem,nlwp,stat,wchan:20,cmd,etimes | grep -i "$*"
@


1.10
log
@UPDATE: fix ps grep bug
@
text
@d17 2
@


1.9
log
@UPDATE: ver up to 2
@
text
@d119 1
d126 2
@


1.8
log
@INSERT: shell if, git https, ps handy command
@
text
@d12 1
a12 1
PS1='\[\033[01;32m\]\u@@\[\033[01;31m\]\h\[\033[01;33m\]1\[\033[01;34m\]\W\[\033[00m\]\$ '
@


1.7
log
@UPDATE: add pid cpu usage(except busybox)
@
text
@d119 9
@


1.6
log
@UPDATE: use yellow display config version
@
text
@d108 6
@


1.5
log
@UPDATE: add ver in PS1
@
text
@d12 1
a12 1
PS1='\[\033[01;32m\]\u@@\[\033[01;31m\]\h-1:\[\033[01;34m\]\W\[\033[00m\]\$ '
@


1.4
log
@INSERT: inspectpid for simple proc view
@
text
@d12 1
a12 1
PS1='\[\033[01;32m\]\u@@\[\033[01;31m\]\h:\[\033[01;34m\]\W\[\033[00m\]\$ '
a104 1
    echo "memory & threads number:"
d106 2
a107 3
    echo "socket stat:"
    cat /proc/$1/net/sockstat
    cat /proc/$1/net/sockstat6
@


1.3
log
@DELETE: ctrl i is same as Tab, not change
@
text
@d100 15
@


1.2
log
@add forward and backward jump in bash
@
text
@a18 1
bind '"\C-i": forward-word'
@


1.1
log
@INSERT: miss 2 time, no history remain
@
text
@d18 3
@

