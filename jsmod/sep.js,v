head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2024.09.28.15.35.15;	author shuw;	state Exp;
branches;
next	1.6;

1.6
date	2024.06.15.14.17.43;	author shuw;	state Exp;
branches;
next	1.5;

1.5
date	2024.06.13.16.22.44;	author shuw;	state Exp;
branches;
next	1.4;

1.4
date	2024.06.13.15.59.30;	author shuw;	state Exp;
branches;
next	1.3;

1.3
date	2023.04.29.05.25.26;	author u0_a111;	state Exp;
branches;
next	1.2;
commitid	100644CAA4632190F2E;

1.2
date	2023.03.07.16.58.17;	author u0_a111;	state Exp;
branches;
next	1.1;
commitid	10064076D2912A0B952;

1.1
date	2023.02.13.16.04.59;	author u0_a111;	state Exp;
branches;
next	;
commitid	10063EA5FAB589ACC64;


desc
@@


1.7
log
@feat: hxdom in jsmod
@
text
@/*240928;global 'W' as entry*/
!(function(top){
top.W||(top.W={})
// wrap DOM elem get/set as func, ".o" is original DOM elem
function observe(elemId){
  var elem = document.getElementById(elemId);
  if (elem === null) {alert(`id[${elemId}] not exist`);return}
  var st = new Set(["INPUT","TEXTAREA","SELECT"]);
  var ndCh = st.has(elem.nodeName)?'v':'i';//value or innerHTML
  var ret = function(val){
    if (val===undefined){return ndCh=='v'?elem.value:elem.innerHTML}
    else {ndCh=='v'?elem.value=val:elem.innerHTML=val; return ret}
  }
  ret.o = elem;
  return ret
}
// ajax  data:json object, cb_func(resp:str, status:200,403,etc)
function ajax(method, url, data, cb_func, timeout = 10000) {
  function encodeParams(params) {
    return Object.keys(params)
      .map(key => encodeURIComponent(key) + "=" + encodeURIComponent(params[key]))
      .join("&");
  }
  method = method.toUpperCase();
  if (data) { data = encodeParams(data); }
  if (method === "GET" && data) { url=`${url}?${data}`; data = null; }

  var xhr = new XMLHttpRequest();
  xhr.open(method, url, true); // async true
  xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
  var timer = setTimeout(function() {
    xhr.abort();
    cb_func(`ERROR: Request timeout ${timeout}ms`, 408); // 408: Request Timeout
    }, timeout);
  xhr.onreadystatechange = function() {
    if (xhr.readyState === 4) { // Request is complete
      clearTimeout(timer);
      cb_func(xhr.responseText, xhr.status);
    }
  };
  if (data) { xhr.send(data); }
  else      { xhr.send();  }
}
// take from htmx
top.W.hxdom=function(method, url, data, target, opt={}, timeout=10000) {
  function _subdom(resp, code){
	if (code >=300 || code <200) {alert(resp)}
	var eid = target[0]==='#' ? target.slice(1) : target;
	var elem = document.getElementById(eid);
	observe(eid)(resp);
  }
  ajax(method, url, data, _subdom, timeout);
}
top.W.observe=observe;
top.W.ajax=ajax;
})(this);
@


1.6
log
@fix: GET url forgot to set
@
text
@d1 1
a1 1
/*240615;global 'W' as entry*/
d5 1
a5 1
top.W.observe=function(elemId){
d18 1
a18 1
top.W.ajax=function(method, url, data, cb_func, timeout = 10000) {
d37 1
a37 1
      clearTimeout(timer); // Clear timer
d44 12
@


1.5
log
@fix: some small tune on ajax
@
text
@d1 1
a1 1
/*240614;global 'W' as entry*/
d7 1
a7 1
  if (elem === null) {alert(elemId+' not exist');return}
a24 3
  var xhr = new XMLHttpRequest();
  xhr.open(method, url, true); // async true

a26 3
  if (method === "POST") {
    xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
  }
d28 3
@


1.4
log
@remove psquery dependency
@
text
@d1 1
a1 1
/*240613;global 'W' as entry*/
d24 1
d26 1
a26 1
  xhr.open(method, url, true);
a27 1
  method = method.toUpperCase();
d29 1
a29 3
  if (method === "GET") {
    url += "?" + data; data = null;
  }
d36 2
a37 2
    cb_func({ error: "Request timed out" }, 408); // 408: Request Timeout
  }, timeout);
d40 1
a40 1
      clearTimeout(timer); // Clear the timeout
@


1.3
log
@feat: add get into sep.js
@
text
@d1 1
a1 1
/*230429;global 'W' as entry;dep on psquery*/
d4 1
a4 1
// wrap DOM elem easy access
d17 31
a47 7
// data: json; fn(resp:str=http_body, status:str='success', xhr:object)
top.W.post=function(url, data, fn){if (!typeof $)return;
  var dstr='';for(k in data){if(dstr==''){dstr=`${k}=${encodeURIComponent(data[k])}`}else{dstr=dstr+`&${k}=${encodeURIComponent(data[k])}`}}
  $.ajax({type:"POST", url:url, data:dstr, success: fn})
}
top.W.get=function(url, fn){if (!typeof $)return;
  $.ajax({url:url, success: fn})
@


1.2
log
@feat: embed observe and post into dict
@
text
@d1 1
d17 1
a17 1
// fn(resp:str=http_body, status:str='success', xhr:object)
d22 4
a25 1
})(this)
@


1.1
log
@js observe
@
text
@d1 2
d4 1
a4 1
function observe(elemId){
d11 1
a11 2
    else {ndCh=='v'?elem.value=val:elem.innerHTML=val}
    return elem
d16 6
a21 1

@

