head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2025.10.11.04.00.38;	author u0_a108;	state Exp;
branches;
next	1.6;
commitid	10068E9D6665E54D872;

1.6
date	2025.10.10.15.49.57;	author u0_a108;	state Exp;
branches;
next	1.5;
commitid	10068E92B251E5C6763;

1.5
date	2025.09.24.13.57.25;	author u0_a108;	state Exp;
branches;
next	1.4;
commitid	10068D3F8C531787E76;

1.4
date	2025.09.24.04.34.12;	author u0_a108;	state Exp;
branches;
next	1.3;
commitid	10068D374C4243EC882;

1.3
date	2025.09.23.12.03.54;	author u0_a108;	state Exp;
branches;
next	1.2;
commitid	10068D28CAA07F9BCEF;

1.2
date	2025.08.11.12.25.15;	author synich;	state Exp;
branches;
next	1.1;
commitid	ebjh4GZEVcISfj6G;

1.1
date	2025.07.08.11.22.51;	author u0_a157;	state Exp;
branches;
next	;
commitid	100686CFF8B7715059B;


desc
@@


1.7
log
@doc: ko.$pen use vdom
@
text
@/*251011;SEP entry*/
// Util: b64, lodash, ajax, awax
// DOM&UI: jq, ko/ko_obj.$pen(vdom,[id]), hxdom
// ko: receive top elem id, return vm with all elems(include top itself) who has db attr
!(function(top){"use strict";
const SEP="W";var _G;top[SEP]||(_G=top[SEP]={});
// util b64/lodash/etc
function _btoa(t){return btoa(String.fromCharCode(...new TextEncoder().encode(t)))}
function _atob(t){return new TextDecoder().decode(Uint8Array.from(atob(t),(c)=>c.charCodeAt(0)))}
function chain(v){
  const q=[];
  const w={
    map(f){q.push(a=>a.map(f));return w},
    filter(f){q.push(a=>a.filter(f));return w},
    sort(it){q.push(a=>[...a].sort((x,y)=>
    (it?x[it]:x)>(it?y[it]:y)?1:-1));return w},
    uniq(){q.push(a=>a.filter((x,i)=>!i || x!=a[i-1]));return w},
    take(n){q.push(a=>a.slice(0,n));return w},
    value(){return q.reduce((x,f)=>f(x), v)}
  };
  return w
}
// simple storage
const ss={
  set(k,v) {if(typeof v=='string'){localStorage.setItem(k,v)} else{localStorage.setItem(k,JSON.stringify(v))}},
  get(k) {let v=localStorage.getItem(k);if(v&&(v[0]=='{'||v[0]=='['))v=JSON.parse(v);return v}
};
// ajax  data:json object, cb_func(resp:str, status:200,403,etc)
function ajax(method, url, data, cb_func, timeout=10000) {
  function encodeParams(p) {
    let _c= (key)=>`${encodeURIComponent(key)}=${encodeURIComponent(p[key])}`;
    return Object.keys(p).map(_c).join("&")
  }
  let use_json=0;
  method = method.toUpperCase();
  if (method=="POSTJ"){method="POST";use_json=1}
  if (data) {
    if (use_json===0) { data = encodeParams(data)}
    else {data = JSON.stringify(data)}
  }
  if (method === "GET" && data) { url=`${url}?${data}`; data = null }

  let xhr = new XMLHttpRequest();
  xhr.open(method, url, true);// async true
  xhr.setRequestHeader("Content-Type", use_json===0?"application/x-www-form-urlencoded":"application/json");
  let timer = setTimeout(function() {
    xhr.abort();
    cb_func(`ERROR: Request timeout ${timeout}ms`, 408)// 408: Timeout
    }, timeout);
  xhr.onreadystatechange = function() {
    if (xhr.readyState === 4) {// Request is complete
      clearTimeout(timer);
      cb_func(xhr.responseText, xhr.status)
    }
  };
  if (data) { xhr.send(data) }
  else      { xhr.send()  }
}
// raise exp when isrej true
function awax(method, url, data, timeout=10000, isrej=false) {
  return new Promise( (resolve,reject)=>{ajax(method, url, data, (resp, st)=>{
    let ok= (st>=200 && st<300)? true: false;
    if(ok){resolve(resp)}
    else{
      if(isrej){reject(resp)} else{resolve(`E${st}: ${resp}`)}
    }
  }, timeout)}
)}
// scan DOM elem and return vm of it. get/set as func, ".o/tog/disp/vis" handy func
function _get_el(elemId){
  var el = elemId;
  if (typeof elemId == "string"){
    let eid = elemId[0]==='#' ? elemId.slice(1) : elemId;
    el = document.getElementById(eid);
    if (el===null) {alert(`id[${elemId}] not exist`)}
  }
  return el
}
function jq(elemId){
  var el = _get_el(elemId);
  var st = new Set(["INPUT","TEXTAREA","SELECT"]);
  var ndCh = st.has(el.nodeName)?'v':'i';//value or innerHTML
  var ret = function(val){
    if (val===undefined){return ndCh=='v'?el.value:el.innerHTML}
    else {if(ndCh=='v'){el.value=val;let ev=el.nodeName=="SELECT"?"change":"input";el.dispatchEvent(new Event(ev,{bubbles: true}))}
          else{el.innerHTML=val}; return ret}
  };
  ret.o = el;
  ret.on = (ev, fn, p)=>{el.addEventListener(ev, p?fn.bind(null, p) :fn)};
  ret.tog = (n)=>{el.classList.toggle(n)};
  ret.disp = (s)=>{el.style.display=s};
  ret.vis = (b)=>{el.style.visibility = b?"visible":"hidden"};
  return ret
}
// take React
function isPlainObject(target){ return Object.prototype.toString.call(target) === '[object Object]' }
function createElement(tag, props, ...children){
  return {
    tag, props,
    children: children.reduce((array, child) =>  {
      if (Array.isArray(child)) {
        array = array.concat(child)
      } else {
        array.push(isPlainObject(child) ? child: new String(child))
      }
      return array
    }, [])
  }
}
function vdom2dom(vdom){
  let dom = null;
  if (isPlainObject(vdom)) {
    let {tag, props = {}, children = []} = vdom;
    if (typeof tag ==="function") {
		let v = tag(props); //必须传入props
		tag = v.tag; props = v.props; children = v.children;
    }
    dom = document.createElement(tag);
    Object.keys(props || []).forEach(key=>{ dom.setAttribute(key, props[key]) } );//不能绑on事件，className特例
    (children || []).forEach(child => {
      dom.appendChild(vdom2dom(child))
    })
  } else {
    dom = document.createTextNode(vdom)
  }
  return dom
}
function render(vdom, p){
  let dom = vdom2dom(vdom);
  if (p.firstChild) {
    p.replaceChild(dom, p.firstChild)
  } else {
    p.appendChild(dom)
  }
}
// take knockout
function _do_attr(_n, vm){
  let _a = _n.getAttribute("db");
  if (_a) {
    _a.split(',').forEach(function(_db){
    let _b = _db.split(':');
    if ("el"==_b[0]) {vm[_b[1]]=jq(_n)}
    else if ("fn"==_b[0]) {
      let ev='input',dly=250;
      if(_n.nodeName=="SELECT"){ev='change';dly=1}
      else if(_n.nodeName=="BUTTON"){ev='click';dly=1}
      let tmout;
      function _smooth(e) {
        clearTimeout(tmout);
        tmout=setTimeout((e)=>{vm[_b[1]](e.target.value, vm)}, dly, e)}
    _n.addEventListener(ev, _smooth)
    }
  })
}}
function _attr_bind(node, vm){
  Array.from(node.childNodes).forEach(_n=>{
    if (1==_n.nodeType){
      _do_attr(_n, vm);
      if (_n.childNodes) {_attr_bind(_n, vm)}
    }
  })
}
function ko(tEId){
  let node=_get_el(tEId),vm={};
  _do_attr(node, vm);_attr_bind(node, vm);
  vm.$root=jq(node);
  vm.$pen=function(vdom, id){let n=id?vm[id].o:this.$root.o;render(vdom, n);_attr_bind(n, this);return this};
  return vm
}
// take from htmx
function _s2el(s){let t=document.createElement("div");t.innerHTML=s;return t.firstChild}
function hxdom(method, url, id_elem, target, opt={}, timeout=10000) {
  function _subdom(resp, code){
    if (code >=300 || code <200) {alert(resp)}
    let swap = opt["swap"];
    if (swap){
      let ori = jq(target).o;//before | after | delete
      if ("b"==swap[0]){ori.insertBefore(_s2el(resp), ori.firstChild)}
      else if("a"==swap[0]){ori.appendChild(_s2el(resp))}
      else {jq(target)("")}
    }else {jq(target)(resp)}
  }
  let data={};
  if (id_elem) {
    if (typeof id_elem =="string") {
      let a_in=id_elem.replace(/\s+/g, "").split(",");
      for (let k of a_in){
        let e = jq(k), n=e.o.getAttribute("name");
        n=n?n:k;
        data[n]=e()
      }
    } else {data=id_elem}
  }
  ajax(method, url, data, _subdom, timeout)
}
// export function
_G.btoa=_btoa;
_G.atob=_atob;
_G.chain=chain;
_G.ss=ss;
_G.ajax=ajax;
_G.awax=awax;
_G.jq=jq;
_G.ko=ko;
_G.hxdom=hxdom;
top.React={createElement:createElement}
})(this)
@


1.6
log
@fix: chain instead of lodash
@
text
@d1 1
a1 1
/*251009;SEP entry*/
d3 1
a3 1
// DOM&UI: jq, ko, render(ko.$pen), hxdom
@


1.5
log
@fix: ss getItem
@
text
@d1 1
a1 1
/*250925;SEP entry*/
d10 13
a22 15
const lodash={
  chain(v){
    const q=[];
    const w={
      map(f){q.push(a=>a.map(f));return w},
      filter(f){q.push(a=>a.filter(f));return w},
      sort(it){q.push(a=>[...a].sort((x,y)=>
      (it?x[it]:x)>(it?y[it]:y)?1:-1));return w},
      uniq(){q.push(a=>a.filter((x,i)=>!i || x!=a[i-1]));return w},
      take(n){q.push(a=>a.slice(0,n));return w},
      value(){return q.reduce((x,f)=>f(x), v)}
    };
    return w
  }
};
d199 1
a199 1
_G.lo=lodash;
@


1.4
log
@feat: lodash chain to mel.js
@
text
@d28 1
a28 1
  get(k) {var v=localStorage.get(k);if(v[0]=='{'||v[0]=='[')v=JSON.parse(v);return v}
@


1.3
log
@feat:localStorage add into mel.js
@
text
@d2 2
a3 2
// Util: jq, ajax, awax, hxdom
// DOM&UI: ko, render(ko.$pen)
d7 64
a96 7
// b64
function _btoa(t){return btoa(String.fromCharCode(...new TextEncoder().encode(t)))}
function _atob(t){return new TextDecoder().decode(Uint8Array.from(atob(t),(c)=>c.charCodeAt(0)))}
var ss={
  set:function(k,v){if(typeof v=='string')localStorage.setItem(k,v)else localStorage.setItem(k,JSON.stringify(v))},
  get:function(k){var v=localStorage.get(k);if(v[0]=='{'||v[0]=='[')v=JSON.parse(v);return v}
}
a171 41
// ajax  data:json object, cb_func(resp:str, status:200,403,etc)
function ajax(method, url, data, cb_func, timeout=10000) {
  function encodeParams(p) {
    let _c= (key)=>`${encodeURIComponent(key)}=${encodeURIComponent(p[key])}`;
    return Object.keys(p).map(_c).join("&")
  }
  let use_json=0;
  method = method.toUpperCase();
  if (method=="POSTJ"){method="POST";use_json=1}
  if (data) {
    if (use_json===0) { data = encodeParams(data)}
    else {data = JSON.stringify(data)}
  }
  if (method === "GET" && data) { url=`${url}?${data}`; data = null }

  let xhr = new XMLHttpRequest();
  xhr.open(method, url, true);// async true
  xhr.setRequestHeader("Content-Type", use_json===0?"application/x-www-form-urlencoded":"application/json");
  let timer = setTimeout(function() {
    xhr.abort();
    cb_func(`ERROR: Request timeout ${timeout}ms`, 408)// 408: Timeout
    }, timeout);
  xhr.onreadystatechange = function() {
    if (xhr.readyState === 4) {// Request is complete
      clearTimeout(timer);
      cb_func(xhr.responseText, xhr.status)
    }
  };
  if (data) { xhr.send(data) }
  else      { xhr.send()  }
}
// raise exp when isrej true
function awax(method, url, data, timeout=10000, isrej=false) {
  return new Promise( (resolve,reject)=>{ajax(method, url, data, (resp, st)=>{
    let ok= (st>=200 && st<300)? true: false;
    if(ok){resolve(resp)}
    else{
      if(isrej){reject(resp)} else{resolve(`E${st}: ${resp}`)}
    }
  }, timeout)}
)}
a198 1
_G.jq=jq;
d201 1
a202 1
_G.ko=ko;
d205 2
@


1.2
log
@feat: atob and btoa support non-latin1
@
text
@d1 1
a1 1
/*250810;SEP entry*/
d36 4
d186 1
@


1.1
log
@fix: mv sep.js to mel.js
@
text
@d1 1
a1 1
/*250302;SEP entry*/
d33 3
d180 2
@

