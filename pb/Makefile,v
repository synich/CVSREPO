head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2025.05.16.15.58.35;	author u0_a157;	state Exp;
branches;
next	1.3;
commitid	100682760AB2C4A34B3;

1.3
date	2025.05.14.10.15.42;	author u0_a157;	state Exp;
branches;
next	1.2;
commitid	10068246D4E55E0E2B3;

1.2
date	2025.05.11.07.21.27;	author u0_a157;	state Exp;
branches;
next	1.1;
commitid	10068204FF72638643F;

1.1
date	2025.04.21.16.16.58;	author u0_a157;	state Exp;
branches;
next	;
commitid	10068066F7A1740680F;


desc
@@


1.4
log
@feat: add fennel and rm todo from pb
@
text
@# dependency and usage
# * lex.l - parse python like to lua
# * walib - USE_WALIB util or lua extension
# * sqlite - USE_VENDOR lua sqlite3 extension
# * lupt/pb - lua src extension
# * lupt/fennel - fennel

CFLAGS = -I./inc/lua51 -I./inc/ -c
LUA_HEAD = -I./lua-5.1.5/src
LUA_LIB = -L./lua-5.1.5/src -llua

ifeq ($(VENDOR), 1)
  EXTCFL = -DUSE_VENDOR
  EXTLIB = sqlite3.o lsqlite3.o
else
  EXTCFL =
  EXTLIB =
endif
ifeq ($(findstring MSYS,$(shell uname -s)), MSYS)
  RES = ico.res
else
  RES =
endif


pb: pb.c extlua.o
	@@echo build pb with VENDOR=$(VENDOR) and FLAGS=$(EXTCFL)
	@@echo export/set VENDOR=1/0  then make again
	@@gcc $(CFLAGS) $(EXTCFL) pb.c
	@@gcc -o pb extlua.o pb.o $(RES) $(EXTLIB) -L./lib/ -llua -lm
	# -lwa
	@@strip pb

extlua.o: extlua.c
	@@gcc $(CFLAGS) extlua.c

ico.res: ico.rc
	@@windres -i ico.rc -o ico.res -O coff

tr: lex.l tran.c
	@@D:\soft\gcc47\bin\flex.exe lex.l
	@@gcc tran.c
	@@a.exe a.lua

sqlite3:
	@@gcc -c -DSQLITE_ENABLE_FTS5 sqlite3.c

iconv:
	@@gcc -shared -L./lib  -o iconv.dll luaiconv.o libiconv2.dll -llua51
@


1.3
log
@fix: move pb.lua to lupt
@
text
@a25 6
all:
	flex lex.l
	gcc ${LUA_HEAD} -c extlua.c
	gcc ${LUA_HEAD} -c pb.c
	gcc -o pb pb.o extlua.o ${LUA_LIB} -lm

d28 1
a28 1
	@@echo export/set VENDOR=1/0 or -DMINIPB. then make again
d30 2
a31 1
	@@gcc -o pb extlua.o pb.o $(RES) $(EXTLIB) -L./lib/ -llua51 -lwa
@


1.2
log
@restore Makefile and pb.lua
@
text
@d1 7
@


1.1
log
@fix: pb not must rely walib
@
text
@d1 1
d5 14
d24 24
@

