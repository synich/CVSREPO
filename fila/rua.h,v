head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2018.09.28.15.16.33;	author Administrator;	state Exp;
branches;
next	1.5;

1.5
date	2018.09.23.15.05.52;	author Administrator;	state Exp;
branches;
next	1.4;

1.4
date	2018.09.23.07.14.48;	author Administrator;	state Exp;
branches;
next	1.3;

1.3
date	2018.09.22.16.06.34;	author Administrator;	state Exp;
branches;
next	1.2;

1.2
date	2018.09.19.16.33.30;	author Administrator;	state Exp;
branches;
next	1.1;

1.1
date	2018.09.16.12.58.00;	author Administrator;	state Exp;
branches;
next	;


desc
@@


1.6
log
@UPDATE: use function instead of global varible
@
text
@#ifndef __RUA_H__
#define __RUA_H__

/* RUA language declare */

#ifdef __cplusplus
extern "C" {
#endif

typedef struct rh_vm rh_vm;

rh_vm* rh_new();
char* rh_eval(rh_vm* vm, const char* expr,
              const char* p0, const char* p1,
              const char* p2, const char* p3);
char* rh_dump(rh_vm* vm, const char* expr);
int rh_free(rh_vm* vm);

#define rh_eval0(v, e) rh_eval(v, e, NULL, NULL, NULL, NULL)
#define rh_eval1(v, e, p0) rh_eval(v, e, p0, NULL, NULL, NULL)
#define rh_eval2(v, e, p0, p1) rh_eval(v, e, p0, p1, NULL, NULL)
#define rh_eval3(v, e, p0, p1, p2) rh_eval(v, e, p0, p1, p2, NULL)
#define rh_eval4(v, e, p0, p1, p2, p3) rh_eval(v, e, p0, p1, p2, p3)

int rh_vmtune(int flg);

#ifdef __cplusplus
}
#endif

#endif
@


1.5
log
@UPDATE: fixed bug which vmcall -> sf_fnexec should insert params into env
@
text
@d25 2
@


1.4
log
@UPDATE: seperate parse and dump, add rh_dump
@
text
@d4 1
a4 1
/* Outside declare */
d19 6
@


1.3
log
@UPDATE: use Werror, stop compile when warning
@
text
@d13 1
a13 1
char* rh_eval(rh_vm*, const char* expr,
d16 2
a17 1
int rh_free(rh_vm*);
@


1.2
log
@UPDATE: make mainstream available
@
text
@d4 1
a4 1
// Outside declare
@


1.1
log
@INSERT: try my first language short for fila
@
text
@d13 3
a15 1
char* rh_eval(rh_vm*, const char*);
@

